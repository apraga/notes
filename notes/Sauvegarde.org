Stratégie

- git-annex pour les disque durs locaux (voir
  [[file:Git-annex.md][Discussion sur git-annex]] )
- sauvegarde avec restic sur google drive/mega (voir
  [[file:Restic%20vs%20Borg][restic vs borg]])
- Attention, pour que restic prennent les symlink dans la sauvegarde, on
  fait plusieurs dépoots

| Repo | Taille (Gb) | Archivage /annex oui oui oui oui | laptop:~/annex oui oui oui oui | raspberry:/media/annex oui oui oui oui | Sauvegarde drive | Mega |

NB: hubic n'existe plus.

** Maintenance
:PROPERTIES:
:CUSTOM_ID: maintenance
:END:
Dans chaque dossier

#+begin_src nu
rsync -avz raspberry:Downloads/torrents private/

cd public ; git annex sync --content ; cd ..
cd private ; git annex sync --content ; cd ..
cd data ; git annex sync --content ; cd ..

$env.RESTIC_PASSWORD = (pass show Backup/restic-private)
restic -r rclone:gdrive:restic-private backup private
restic -r rclone:mega:restic-private backup private

$env.RESTIC_PASSWORD = (pass show Backup/restic-public)
restic -r rclone:gdrive:restic-public backup public
restic -r rclone:mega:restic-public backup public
#+end_src

** Configuration
:PROPERTIES:
:CUSTOM_ID: configuration
:END:
*** Papers
:PROPERTIES:
:CUSTOM_ID: papers
:END:
#+begin_src sh
cd papers
git init
git annex init
git annex add
git annex initremote github-lfs type=git-lfs url=git@github.com:apraga/papers.git encryption=none
git lfs track "*.pdf"
git annex sync --content
#+end_src

Note: les articles sont sur sourcehut aussi mais sans lfs.

*** Configuration des remote avec rclone (public + private)
:PROPERTIES:
:CUSTOM_ID: configuration-des-remote-avec-rclone-public-private
:END:
Installer
[[https://github.com/git-annex-remote-rclone/git-annex-remote-rclone]]
(copier exécutable dans $PATH)

#+begin_src sh
cd public
git init
git annex init
git annex add
#+end_src

Suivre les indications pour ajouter un remote nommé mega de type Mega
(29)

#+begin_src sh
rclone config
rclone lsd mega:
#+end_src

Créer un remote megaremote qui pointe vers le remote mega dans rclone.
Pas d'encryption:

#+begin_src sh
git annex initremote megaremote type=external externaltype=rclone target=mega prefix=annex-public chunk=50MiB encryption=none rclone_layout=lower
#+end_src

Pour googledrive, il faut un client id et un client secret selon les
consignes ici : [[https://rclone.org/drive/#making-your-own-client-id]].
On encrypte mais avec la clé dans le dépôt git donc ne pas mettre les
dépôts n'importe où !

#+begin_src sh
git annex initremote gdriveremote type=external externaltype=rclone target=gdrive prefix=annex-private chunk=50MiB encryption=shared rclone_layout=lower
#+end_src

*** Archivage local
:PROPERTIES:
:CUSTOM_ID: archivage-local
:END:
Pour /annex (ZFS pool)

#+begin_src sh
cd /annex
doas git clone ~/annex/private
doas git clone ~/annex/public
doas git clone ~/annex/data
doas git clone ~/annex/papers
doas chown -R alex private public/ papers/ data

cd private; git annex init
cd data ; git annex init ; cd ...
cd papers ; git annex init
#+end_src

Puis on ajoute les remote dans ~/annex

#+begin_src sh
cd ~/annex
git remote add zfs /annex/private
cd data ; git remote add zfs /annex/data; cd ..
cd private ; git remote add zfs /annex/private; cd ..
cd public ; git remote add zfs /annex/public; cd ..
cd papers ; git remote add zfs /annex/papers; cd ..
#+end_src

On synchronize avec

#+begin_example
cd private
git annex sync --content
#+end_example

Ne pas oublier de le faire dans l'autre sens !

#+begin_src sh
cd /annex/public
git annex add remote ~/annex/public
git annex sync --content
#+end_src

Idem pour private, data

*** Sauvegarde restic sur google drive et mega
:PROPERTIES:
:CUSTOM_ID: sauvegarde-restic-sur-google-drive-et-mega
:END:
Cf configuration rclone puis

#+begin_src nu
cd ~/annex
$env.RESTIC_PASSWORD = (pass show Backup/restic-private)
restic -r rclone:gdrive:restic-private init
restic -r rclone:mega:restic-private init
restic -r rclone:gdrive:restic-private backup private
restic -r rclone:mega:restic-private backup private

$env.RESTIC_PASSWORD = (pass show Backup/restic-public)
restic -r rclone:gdrive:restic-public init
restic -r rclone:mega:restic-public init
restic -r rclone:gdrive:restic-public backup public
restic -r rclone:mega:restic-public backup public
#+end_src

** Mots de passe
:PROPERTIES:
:CUSTOM_ID: mots-de-passe
:END:
Stratégie : une partie est gérée par Pass mais on utilise maintenant
proton

* Configuration
:PROPERTIES:
:CUSTOM_ID: configuration-1
:END:
** Gentoo
:PROPERTIES:
:CUSTOM_ID: gentoo
:END:
Un dépôt git pour /etc/portage

** Freebsd
:PROPERTIES:
:CUSTOM_ID: freebsd
:END:
Voir [[Configuration freebsd]]
