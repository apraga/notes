:PROPERTIES:
:ID:       32598fde-e934-43dc-bb69-21c9b8013948
:END:
#+title: Backup
#+filetags: personal

* Nouvelle version
On ne fait plus de sauvegarde mais des archives.
hubic n'existe plus.

Structure: plusieurs dépôts dans annex

| Repo    | Taille | Crypté | Mega | Google Drive | /annex | ~/annex    | Raspberry |
|         | (Gb)   |        |      |              | (tour) | (portable) |           |
|---------+--------+--------+------+--------------+--------+------------+-----------|
| papers  |        | non    |      |              |        |            |           |
| public  |        | non    | oui  | oui          | oui    |            | oui       |
| private | 0.8    | non    | oui  | oui          | oui    |            | oui       |
| data    |        |        |      |              | oui    |            | oui       |

** Configuration
*** Papers
#+begin_src sh
cd papers
git init
git annex init
git annex add
git annex initremote github-lfs type=git-lfs url=git@github.com:apraga/papers.git encryption=none
git lfs track "*.pdf"
git annex sync --content
#+end_src
*** Configuration des remote avec rclone (public + private)
Installer https://github.com/git-annex-remote-rclone/git-annex-remote-rclone
(copier exécutable dans $PATH)

#+begin_src sh
cd public
git init
git annex init
git annex add
#+end_src

Suivre les indications pour ajouter un remote nommé mega de type Mega (29)
#+begin_src sh
rclone config
rclone lsd mega:
#+end_src

Créer un remote megaremote qui pointe vers le remote mega dans rclone. Pas d'encryption:
#+begin_src sh
git annex initremote megaremote type=external externaltype=rclone target=mega prefix=annex-public chunk=50MiB encryption=none rclone_layout=lower
#+end_src

Pour googledrive, il faut un client id et un client secret selon les consignes ici : <https://rclone.org/drive/#making-your-own-client-id>. On encrypte mais avec la clé dans le dépôt git donc ne pas mettre les dépôts n'importe où !
#+begin_src  sh
git annex initremote gdriveremote type=external externaltype=rclone target=gdrive prefix=annex-private chunk=50MiB encryption=shared rclone_layout=lower
#+end_src

** Archivage
Dans chaque dossier

#+begin_src sh
git annex sync --content
#+end_src

* Ancienne version
- google -> to google drive (clear)
- hubic -> to Hubic and Mega(clear)
- local config files -> google and hubic (encrypted)
- raspberry config files -> google and hubic (encrypted)
- local rtorrent -> google and hubic (encrypted)
- raspberry rtorrent -> google and hubic (encrypted)

#+begin_src fish
#!/usr/local/bin/fish
# 3 steps procedure :
#   1. Backup from the pi using rsync
#   2. Encrypt cofig files (rasperry + local) using duplicity
#   2. Backup to the cloud using rsync
#
# Backup data either in clear or encrypted
# - google -> to google drive (clear)
# - hubic -> to Hubic and Mega(clear)
# - local config files -> google and hubic (encrypted)
# - raspberry config files -> google and hubic (encrypted)
# - local rtorrent -> google and hubic (encrypted)
# - raspberry rtorrent -> google and hubic (encrypted)
set root "/home/alex/backups"

# Duplicity needs a passphrase. Use pass "backup/duplicity"
set -x PASSPHRASE (cat /home/alex/.pass.txt)

# #------- Raspberry: backup -----
# Save books
# rclone sync pi:/media/books/ /media/books/
cd /home/alex/annex ; git annex sync

# Save torrents and config files(encrypted)
# Warning : --include implyies everything is excluded so we need /** at the end
# Don't forget the / in the folder too..
set tmp ~/backups/raspberry-tmp/
rclone sync --include "/home/alex/Downloads/torrents/**" \
    --include "/home/alex/Downloads/session/**" \
    --include "/usr/local/etc/**"  \
    --include "/etc/**"  \
    --include "/boot/loader.conf"  pi:/ $tmp
# Encrypt it
duplicity --allow-source-mismatch $tmp file:///home/alex/backups/raspberry

#------- Local backup (encrypted) ----------------
# 1. Create encrypted local version
#
# This requires setenv PASSPHRASE in doas.conf !!
# Due to permission, we need separate folder for doas command
doas duplicity --allow-source-mismatch --include /usr/local/etc/ --include /etc/ \
    --include /boot/loader.conf --exclude '**' \
    / file:///home/alex/backups/desktop/root

duplicity --allow-source-mismatch --include /home/alex/Downloads/torrents \
    --include /home/alex/Downloads/session \
    --exclude '**'  \
    /home/alex/Downloads file:///home/alex/backups/desktop/rtorrent

#------------ Backup all encnrypted and non encrypted

# Backup is then made with rsync because there is a symlink
# desktop -> google/desktop
# desktop -> hubic /desktop
#--- All
# Google drive and mega can be managed with rclone
rclone -L sync --exclude 'Coopétition/' --drive-import-formats .xlsx $root/google/  google:
rclone -L sync $root/google backblaze:unixStorage
rclone -L sync $root/hubic hubic:
rclone -L sync $root/hubic mega:

#--- Passphrase
/usr/local/bin/pass git push

#+end_src
