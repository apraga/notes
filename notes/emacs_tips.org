* Accent issues when pasting from clipboard (Windows)
C-x RET x (set-selection-coding-system) and choose utf-16-le

* Jump to and from function definition
  :PROPERTIES:
  :CUSTOM_ID: jump-to-and-from-function-definition
  :END:

M-. (xref-pop-marker-stack): jump to definition M-?
(xref-find-references): find all occurences M-, (xref-find-definitions):
q

* SSH, FTP, sudo

=SPC f f= then
#+begin_src  sh
/protocol:user@host:/file.txt
#+end_src
For SSH (with an alias)
#+begin_src  sh
/ssh:myalias:
#+end_src
Without an alias
#+begin_src  sh
/ssh:john@myhost:/home/john/
#+end_src

** With fish shell
ssh can hang so I follewed [[https://github.com/oh-my-fish/theme-bobthefish/issues/148][this advice]] ) and set in
~/.config/fish/fish.config

#+BEGIN_EXAMPLE
  if test &quot;$TERM&quot; = &quot;dumb&quot;
      exec sh
  end
#+END_EXAMPLE

For faster access, set a bookmark to the folder <3 Otherwise it's a bit
annoying to type

* Eshell
  :PROPERTIES:
  :CUSTOM_ID: eshell
  :END:

C-c M-b pour completer un buffer (utile pour redirection)

#+BEGIN_EXAMPLE
  rga &quot;test&quot; lol.pdf &gt;
#+END_EXAMPLE

* Grep + sed
  :PROPERTIES:
  :CUSTOM_ID: grep-sed
  :END:

Search and edit with ripgrep directly in the result !

1. search with ripgrep, for example with `SPC s p`
2. Put the results in a buffer with `C-c C-o` (`ivy-occur`)
3. Edit the buffer with `i` (`ivy-wgrep-change-to-wgrep`)

* Calc
  :PROPERTIES:
  :CUSTOM_ID: calc
  :END:

Embedded-mode : évalue formule sous le curseur

* Mail with mbsync
  :PROPERTIES:
  :CUSTOM_ID: mail-with-mbsync
  :END:

! Got several "duplicate ID" after using a systemd service. It's due to
moving files (my version of archiving) and the naming scheme. We must
use the "alternate" naming scheme to avoid duplicates. Seems to work NB:
we should explain with gmail

Mbsync is really faster when fetching mails the first time.Afterwards,
I'm not sure the gain is worth it

* Post config en jap sur emacs
  :PROPERTIES:
  :CUSTOM_ID: post-config-en-jap-sur-emacs
  :END:

Archlinux :

1. installer le package "mozc" depuis emacs installer emacs-mozc aussi
   en activant le flag 'emacs_{mozc} = "yes"' (sinon le "helper" n'est
   pas trouvé)

Update : mozc is too slow in doom emacs => activate japanese instead

* Torrents with emacs
  :PROPERTIES:
  :CUSTOM_ID: torrents-with-emacs
  :END:

** What works
   :PROPERTIES:
   :CUSTOM_ID: what-works
   :END:

Nginx + URL

#+BEGIN_EXAMPLE
  server {
      listen       8000;
      server_name  localhost;

      access_log  /var/log/nginx/rtorrent_access.log;
      error_log  /var/log/nginx/rtorrent_error.log;

      location /RPC2 {
          root /torrents;
          # auth_basic &quot;Restricted&quot;;
          # auth_basic_user_file /etc/nginx/.htpasswd;
          scgi_pass   127.0.0.1:5000;
          # scgi_pass   unix:/torrents/rtorrent.sock;
          include     scgi_params;
      }
#+END_EXAMPLE

And for rtorrent

#+BEGIN_EXAMPLE
  network.scgi.open_port = 127.0.0.1:5000
#+END_EXAMPLE

And in emacs

#+BEGIN_EXAMPLE
  (setq mentor-rtorrent-external-rpc &quot;http://127.0.0.1:8000/RPC2&quot;)
#+END_EXAMPLE

** More secure : with a socket
   :PROPERTIES:
   :CUSTOM_ID: more-secure-with-a-socket
   :END:

We create a group to be able to write the socket

#+BEGIN_EXAMPLE
  sudo groupadd rtorrent-socket
  sudo gpasswd -a alex rtorrent-socket
  sudo gpasswd -a nginx rtorrent-socket
  sudo chown -R nginx:rtorrent-socket /torrents/
  sudo chmod 775 -R /torrents/
  su - alex # To be able to start
#+END_EXAMPLE

Rtorrent : hack we need to change both ownership and permissions +
daemon mode

#+BEGIN_EXAMPLE
  # For use with emacs with the mentor package
  network.scgi.open_local = /torrents/rtorrent.sock

  # Change ownership to propergroup
  schedule2 = scgi_permission1, 0, 0, &quot;execute.nothrow=chown,alex:rtorrent-socket,/torrents/rtorrent.sock&quot;
  # Make SCGI socket group-writable and secure
  schedule2 = scgi_permission2, 2, 0, &quot;execute.nothrow=chmod,770,/torrents/rtorrent.sock&quot;

  system.daemon.set = true
#+END_EXAMPLE

Emacs

#+BEGIN_EXAMPLE
  (setq mentor-rtorrent-external-rpc &quot;/torrents/rtorrent.sock&quot;)
#+END_EXAMPLE

Update : it seems to work without nginx with a socket ??

* Org mode
  :PROPERTIES:
  :CUSTOM_ID: org-mode
  :END:
** Wrap selection into an org-block
C-c C-, s
** Latex :
Bibliography: Ajouter dans le header
#+begin_src org
#+bibliography: memoire.bib
#+end_src
Glossaries: Avec latexmk, il faut une configuration spéciale dans .latexmkrc
#+begin_src sh
add_cus_dep( 'acn', 'acr', 0, 'makeglossaries' );
add_cus_dep( 'glo', 'gls', 0, 'makeglossaries' );
$clean_ext .= " acr acn alg glo gls glg";

sub makeglossaries {
     my ($base_name, $path) = fileparse( $_[0] );
     my @args = ( "-q", "-d", $path, $base_name );
     if ($silent) { unshift @args, "-q"; }
     return system "makeglossaries", "-d", $path, $base_name;
 }

#+end_src
** lulatex
   :PROPERTIES:
   :CUSTOM_ID: utiliser-lulatex
   :END:

; lualatex preview (setq org-latex-pdf-process '("lualatex -shell-escape
-interaction nonstopmode %f" "lualatex -shell-escape -interaction
nonstopmode %f")) (Attention à l'ordrer)

* Haskell
  :PROPERTIES:
  :CUSTOM_ID: haskell
  :END:

Mode mal documenté (avec lsp) C-c C-l pour charger code dans ghci C-c
C-z si on perd le popup

* Misc
  :PROPERTIES:
  :CUSTOM_ID: misc
  :END:

yas-describe-tables to see snippets

* Presentation
  :PROPERTIES:
  :CUSTOM_ID: presentation
  :END:

** org mode -> beamer
   :PROPERTIES:
   :CUSTOM_ID: org-mode---beamer
   :END:

** org-mode -> reveal.js
   :PROPERTIES:
   :CUSTOM_ID: org-mode---reveal.js
   :END:

#+BEGIN_EXAMPLE
  REVEAL_TRANS
  #+OPTIONS: toc:nil
  #+OPTIONS: reveal_width:2100 reveal_height:1000
  #+REVEAL_TRANS: nil
  \****** TODO DP 1
  \******  DP1
  \******  homme de 54 ans, tabagique au long cours et hypertendu depuis 12 ans (traitement par inhibiteur calcique), consulte
  \****** n médecin traitant pour un épisode isolé d'hématurie macroscopique totale, sans caillot. Il a pour autre antécédent une
  \****** pendicectomie dans l'enfance. L'hémogramme est le suivant : Hb 10,4 g/dL (VGM 78 µm3), GB 8 G/L, plaquettes 247
#+END_EXAMPLE

Puis SPC m e v b

* Tramp
  :PROPERTIES:
  :CUSTOM_ID: tramp
  :END:

SSH + sudo : /ssh:you@remotehost%7Cdoas:: ou
/ssh:you@remotehost%7Csudo::

Sauvegarder session :

[[https://emacs.stackexchange.com/questions/26560/bookmarking-remote-directories-trampsudo]]
(add-to-list 'tramp-default-proxies-alist '("\\`mydomain\\'"
"\\`root\\'" "/sshx:user@%h:"))

* Useful shortcuts:
  :PROPERTIES:
  :CUSTOM_ID: useful-shortcuts
  :END:

- C-x C-q in dired to edit the buffer as text <3
- C-x z to repeat last command, then z (like vim ".")

Not so useful

- C-x right/left arrow to switch buffer (I'm not really using it)

* Post sur facebook messenger inside emacs
  :PROPERTIES:
  :CUSTOM_ID: post-sur-facebook-messenger-inside-emacs
  :END:

Requirements

- bitlbee
- erc
- bitlbee-facebook

Config

#+BEGIN_SRC lisp
    ;; ---- ERC
  ;; A helper function to auto-start bitlbee
  (defun bitlbee-start ()
    (interactive)
    (erc :server "localhost" :port 6667 :nick "alex" :password "sharingan"))

  ;; Here we start ERC at boot, with the password here for minimal coding
  (use-package! erc
    ;; Bitlbee by default
    :commands (bitlbee-start)
    :config
    ;; Autojoin must be done inside bitlbee directly
    (setq erc-hide-list '("JOIN" "PART" "QUIT" "NICK"))
  )
#+END_SRC

LISP

Result

M-x bitlbee-start start bitlbee. You need to follow these instuctions
[[https://wiki.bitlbee.org/HowtoFacebookMQTT]] > account add facebook
<email> <password> > account facebook on > fbjoin facebook <index>
<channel> The index is given either by fbchats facebook or must be
copying manually from facebook

If you want to autojoin a channel, it must be done in bitlbee direcly
channel blabla set auto_{join} true NB the config file are most likely
in /var/lib/bitlbee/$USER.xml
