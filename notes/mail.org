Today, we will see how to get mails, read them, and answer them, inside
a terminal. We will need four utilities for that :

- one to synchronize our local mails with the server : =mbsync=,
- a mail client for viewing them : emacs with =notmuch=
- an agent for sending mails : =msmtp= a good choice (or sendmail, which
  should be installed by default on most Linux and BSD distribution )

Install each of this utilities according to the usual way of your
distribution. The following tutorial assumes you have two accounts, one
of them being Gmail.

** Mbsync and Gmail
   :PROPERTIES:
   :CUSTOM_ID: mbsync-and-gmail
   :END:

Here we will configure a gmail account using =~/.msmtprc=. Let's break
down the configuration file. First, for increased security, generate an
app password using [[https://myaccount.google.com/apppasswords]] and
encrypt it with gpg:

#+BEGIN_EXAMPLE
  #---------------------------------
  # Gmail
  #---------------------------------
  IMAPAccount gmail
  # Address to connect to
  Host imap.gmail.com
  User alexis.praga@gmail.com
  PassCmd &quot;gpg2 -q --for-your-eyes-only --no-tty -d ~/.gmailpass.gpg&quot;
  # Use SSL
  SSLType IMAPS
  CertificateFile /usr/local/share/certs/ca-root-nss.crt

  IMAPStore gmail-remote
  Account gmail
#+END_EXAMPLE

Then define the folders for your mail. =~mail/gmail= contains an Inbox
and an Archive folder. It must be of the =maildir= format. Using the
fish shell syntax:

#+BEGIN_EXAMPLE
  for i in cur new tmp
    mkdir -p ~/mail/gmail/inbox/$i
    mkdir -p ~/mail/gmail/archive/$i
  end
#+END_EXAMPLE

Now, return to =~/.mbsyncrc=:

#+BEGIN_EXAMPLE
  MaildirStore gmail-local
  # Important: we need to be able to move files. The &quot;native&quot; setting results in duplicates and errors...
  AltMap yes
  Subfolders Verbatim
  # The trailing &quot;/&quot; is important
  Path ~/mail/gmail/
  Inbox ~/mail/gmail/inbox
#+END_EXAMPLE

Then the hard part: how to synchronize folders with gmail ? I've chosen
to put incoming mail in =inbox= and everything else in =archive=

#+BEGIN_EXAMPLE
  # Exclude everything under the internal [Gmail] folder, except the interesting folders
  # ALl (and I mean all) mail is in All mail.
  # With this setup, we have duplicates in inbox and in all mail (that's ok, should not be much)
  # There is no need for sent folder as it is also in all mail...
  # We also need deleted messages because the iPhone do not delete mail but create
  # this label instead... So we have to get it here, delete et sync with the
  # server
  Channel gmail-default
  Far :gmail-remote:
  Near :gmail-local:
  # Select some mailboxes to sync
  Patterns &quot;INBOX&quot;
  Create Near
  # Save the synchronization state files in the relevant directory
  SyncState *

  # Name translation
  Channel gmail-archive
  Far :gmail-remote:&quot;[Gmail]/All Mail&quot;
  Near :gmail-local:archive
  Create Near
  SyncState *

  Channel gmail-trash
  Far :gmail-remote:&quot;Deleted Messages&quot;
  Near :gmail-local:trash
  Create Near
  SyncState *

  # Get all the channels together into a group.
  Group googlemail
  Channel gmail-default
  Channel gmail-archive
  Channel gmail-trash
#+END_EXAMPLE

A second account can be set the same way :

#+BEGIN_EXAMPLE
  #---------------------------------
  # Free
  #---------------------------------
  IMAPAccount free
  # Address to connect to
  Host imap.free.fr
  User alexis.praga@free.fr
  # The file is encrypted with &quot;gpg -e&quot;
  PassCmd &quot;gpg2 -q --for-your-eyes-only --no-tty -d ~/.freepass.gpg&quot;
  # Use SSL
  SSLType IMAPS
  CertificateFile /usr/local/share/certs/ca-root-nss.crt

  IMAPStore free-remote
  Account free

  MaildirStore free-local
  # Important: we need to be able to move files. The &quot;native&quot; setting results in duplicates and errors...
  AltMap yes
  Subfolders Verbatim
  # The trailing &quot;/&quot; is important
  Path ~/mail/free/
  Inbox ~/mail/free/inbox

  Channel free-default
  Far :free-remote:
  Near :free-local:
  Patterns &quot;INBOX&quot;
  Create Near
  SyncState *

  # Name translation
  Channel free-archive
  Far :free-remote:&quot;Archive&quot;
  Near :free-local:archive
  Create Near
  SyncState *

  # Name translation
  Channel free-sent
  Far :free-remote:&quot;Sent&quot;
  Near :free-local:sent
  Create Near
  SyncState *

  # Get all the channels together into a group.
  Group freemail
  Channel free-default
  Channel free-archive
#+END_EXAMPLE

** Msmtp
   :PROPERTIES:
   :CUSTOM_ID: msmtp
   :END:

To send mail, I use the gmail account for that :

#+BEGIN_EXAMPLE
  # Set default values for all following accounts.
  defaults
  auth           on
  tls            on
  tls_trust_file /usr/local/share/certs/ca-root-nss.crt
  logfile        ~/.msmtp.log

  # Gmail
  account        gmail
  host           smtp.gmail.com
  port           587
  from           horse1@gmail.com
  user           john.doe
  password       XXXXXXX

  # Set a default account
  account default : gmail
#+END_EXAMPLE

Change the permissions :

#+BEGIN_EXAMPLE
  $ chmod 600 ~/.msmtprc
#+END_EXAMPLE

Then, you can try sending mail with the following command :

#+BEGIN_EXAMPLE
  $ cat test.mail | msmtp -a default account1@gmail.com 
#+END_EXAMPLE

where test.mail is an simple file like this one (there must be an empty
line after the subject):

#+BEGIN_EXAMPLE
  To: account1@gmail.com
  From: fake@gmail.com
  Subject: Test &lt;br/&gt; 

  Hello !
#+END_EXAMPLE

** Notmuch and emacs
   :PROPERTIES:
   :CUSTOM_ID: notmuch-and-emacs
   :END:

Notmuch is an awesome tool to manage your mail. Basically, it does not
touch your mail but rather operates on tags. So an incoming mail will be
tagged as =inbox= and if you delete it, it will be replaced by the
=deleted= tag. It allows for fast indexing and quick search of your
mail. The only drawback is that it does *not* move your mail. So
deleting for real must be done manually.

Anway, it's awesome and you should use it in 2021 !

Configuration is pretty straightforward. The first time, run

#+BEGIN_EXAMPLE
  notmuch
  notmuch new
#+END_EXAMPLE

and follow the instructions.

Then I have a script running as a cron job to synchronize my mail and
move mails in the proper folder (=inbox=, =archive=) or delete it :

#+BEGIN_EXAMPLE
  #!/usr/local/bin/fish

  # Combine mbsync and notmuch because mbsync may fail and we still want notmuch to run (as we keep getting quota errors)
  # So we must have the two command here

  mbsync -a

  set args --output=files --format=text0

  # Tagsent mails (by default, there are not tagged)
  set filter &quot;(folder:gmail/inbox or folder:free/inbox or tag:inbox) and from:\&quot;Alexis Praga\&quot;&quot;
  notmuch tag +sent +archived -inbox --  $filter

  # Move archived mail from inbox to archive folder
  set filter tag:archived folder:gmail/inbox
  notmuch search $args $filter  | xargs -0 -J {} mv {} ~/mail/gmail/archive/cur

  set filter tag:archived folder:free/inbox
  notmuch search $args $filter  | xargs -0 -J {} mv {} ~/mail/free/archive/cur

  # Really delete &quot;deleted messages&quot; from gmail
  set filter &quot;folder:gmail/trash&quot;
  notmuch tag +deleted --  $filter

  # delete mails as notmuch cannot do it
  set filter &quot;(folder:free/inbox or folder:gmail/inbox or folder:gmail/trash) and tag:deleted&quot;
  notmuch search $args $filter  | xargs -0 -J {} mv {} ~/mail/trash/cur

  # Get new mail
  notmuch new

  ‚ùØ crontab -l
  MAILTO=&quot;&quot;
  */5 * * * * $HOME/scripts/mbsync_notmuch.sh
#+END_EXAMPLE

Then I can read the email inside emacs with the =notmuch= plugin.

** What about gnus ?
   :PROPERTIES:
   :CUSTOM_ID: what-about-gnus
   :END:

I've tried it two times because the concept was appealing: manage your
mail as a newserver is cool. The major drawback is the lack of
integration for notmuch. You can make it work with =mairix= but its
super slow.
