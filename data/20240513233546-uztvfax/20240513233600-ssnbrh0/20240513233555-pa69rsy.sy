{"ID":"20240513233555-pa69rsy","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240513233555-pa69rsy","title":"Pandoc","type":"doc","updated":"20240513235007"},"Children":[{"ID":"20240513233556-jtwqczd","Type":"NodeParagraph","Properties":{"id":"20240513233556-jtwqczd","updated":"20240513235007"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"tag","TextMarkTextContent":"haskell"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240513233557-d4troar","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240513233557-d4troar","updated":"20240513233557"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Exemples"}]},{"ID":"20240513233558-9aaaae3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240513233558-9aaaae3","updated":"20240513233558"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Remplacer liens org-roam pour hakyll"}]},{"ID":"20240513233559-xjpq5qx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"aGFza2VsbA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240513233559-xjpq5qx","updated":"20240513233559"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aGFza2VsbA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{-# LANGUAGE TemplateHaskell            #-}\n{-# LANGUAGE QuasiQuotes                #-}\n{-# LANGUAGE TypeFamilies               #-}\n{-# LANGUAGE MultiParamTypeClasses      #-}\n{-# LANGUAGE GADTs                      #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE RecordWildCards            #-}\n{-# LANGUAGE FlexibleInstances          #-}\n{-# LANGUAGE OverloadedStrings          #-}\n{-# LANGUAGE DerivingStrategies         #-}\n{-# LANGUAGE StandaloneDeriving         #-}\n{-# LANGUAGE UndecidableInstances       #-}\n{-# LANGUAGE DataKinds #-}\n\nimport qualified Database.Persist.TH as PTH\nimport Database.Persist (Entity(..))\nimport Database.Persist.Sql (toSqlKey)\nimport qualified Data.Text as T\nimport Database.Persist.Sqlite\nimport Control.Monad.IO.Class\nimport Control.Monad.Logger\nimport Text.Pandoc.JSON\nimport System.FilePath (addExtension, dropExtension, makeRelative)\nimport System.Directory (getCurrentDirectory)\n\nPTH.share [PTH.mkPersist PTH.sqlSettings, PTH.mkMigrate \"migrateAll\"] [PTH.persistLowerCase|\n  Node sql=nodes\n    Id T.Text sql=id\n    file T.Text\n    title T.Text\n    deriving Show\n|]\n\npath =  \"/home/alex/.emacs.d/.local/cache/org-roam.db\"\n\nunescape :: T.Text -\u003e T.Text\nunescape = T.replace \"\\\"\" \"\"\n\n-- From \"id:XXXX\" search in org-roam database for path to file\n-- If there is no id, just return the string unchanged\npathFromID :: T.Text -\u003e IO (T.Text)\npathFromID id = runSqlite path $ do\n    -- Get id and add (escaped) quote\n    let s = T.concat [\"\\\"\", last (T.splitOn \"id:\" id), \"\\\"\"]\n    test \u003c- get (NodeKey s)\n    let res = case test of\n                Just x -\u003e unescape . nodeFile $ x\n                Nothing -\u003e id\n    return res\n\n-- Change link to HTML version for publishing it\n-- Link is transformed from absolute to relative\n-- And we add the root folder for publishing\n-- FIXME this will not work locally...\nhtmlLink :: FilePath -\u003e FilePath -\u003e FilePath\nhtmlLink f pwd = \"/\" ++ makeRelative pwd (addExtension (dropExtension f) \".html\")\n\n-- Replace org-mode internal link to link to the full path of the file\nreplaceLink :: Inline -\u003e IO (Inline)\nreplaceLink (Link attr xs t) = do\n  p \u003c- pathFromID (fst t)\n  pwd \u003c- getCurrentDirectory\n  let p' = htmlLink (T.unpack p) pwd\n  return $ Link attr xs (T.pack p', snd t)\nreplaceLink x = return x\n\n\nmain :: IO ()\nmain = toJSONFilter replaceLink\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}